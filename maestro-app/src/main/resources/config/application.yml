#
# Copyright (c) 2024 The Ontario Institute for Cancer Research. All rights reserved.
#
# This program and the accompanying materials are made available under the terms of the GNU Public License v3.0.
# You should have received a copy of the GNU General Public License along with
# this program. If not, see <http://www.gnu.org/licenses/>.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
# TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER
# IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

###############################################################################
# Application Configuration for Maestro
#
# This file contains various configuration settings for the Maestro application.
# Please update the values according to your specific environment.
###############################################################################

###############################################################################
# Server Configuration
###############################################################################
server:
  port: 11235

###############################################################################
# Maestro Configuration
###############################################################################
maestro:
  disableIndexing: false          # Runs maestro without indexing, i.e. Only the document conversion API endpoints
  disableEventIndexing: false     # Disable kafka integration
  webclient:
    maxInMemorySize: -1           # -1 allows for unlimited memory size

  ###############################################################################
  # SONG Configuration
  ###############################################################################
  song:
    indexableStudyStatesCsv: PUBLISHED
    pageLimit: 25                 # Page limit for getting analysis from song
    maxRetries: 3
    timeoutSec:
        study: 100                # Some studies take really long, +30 secs, to be downloaded
        analysis: 5

  ###############################################################################
  # Elasticsearch Configuration
  ###############################################################################
  elasticsearch:
    clusterNodes:
      - http://localhost:9200     # Elasticsearch server nodes to send requests to
    pathPrefix:
    indexes:                      # The index(es) to store documents in (will be created if not existing)
      fileCentric:
          name:  overture-quickstart-index
          alias: file_centric
          enabled: true
      # analysisCentric:
      #     name: analysis_centric_1.0
      #     alias: analysis_centric
      #     enabled: true
    client: 
      basicAuth:
        enabled: false
        user: elastic
        password: myelasticpassword
      trustSelfSignedCert: true    # Self signed certs should only be used for development environments
      docsPerBulkReqMax: 5000      # Controls the number of documents per bulk request in elasticsearch
      connectionTimeout: 5000      # Max time to wait for a connection to be established
      socketTimeout: 10000         # Max time to wait on idle connection (no data flow)
      retry:                       # In case of failure this controls the retry attempts
        maxAttempts: 3               # Maximum number of retry attempts before throwing an error
        waitDurationMillis: 500      # Waiting between retries (ms)

  ###############################################################################
  # Repositories Configuration
  # List of file repositories (Songs)
  ###############################################################################

  repositories:
    # The following properties will be used in the document (see ../file_centric.json)
    - code: song.overture              # Must be unique & must match song.serverId if using kafka integration with song
      url: http://localhost:8080    # Change this to a valid domain where the song exists in your setup
      name: Overture
      storageType: S3                  # Optional
      organization: OICR               # Optional
      country: CA                      # Optional
    # You can add other Songs as needed
    # - code: song.overture2
    #   url: http://localhost:8080
    #   name: local song 2
    #   storageType: S3                 # Optional
    #   organization: ICGC              # Optional
    #   country: CA                     # Optional

  ###############################################################################
  # Failure Log Configuration
  # Last resort fallback file system log in case of retries exhaustion
  ###############################################################################
  failureLog:
    enabled: true
    dir: ${user.home}/logs/maestro

  ###############################################################################
  # Notifications Configuration
  ###############################################################################
  notifications:
    slack:
      enabled: false
      # The types to trigger a notification to this channel (see NotificationName.java)
      notifiedOn:
        - ALL
      url: https://hooks.slack.com/services/SECRET_TOKEN
      channel: maestro-alerts
      username: maestro
      maxDataLength: 1000
      # Notifications has two parameters (TYPE [string], DATA[map])
      templates:
        error: ':bangbang: Error : ##TYPE##, Error Info: ```##DATA##```'
        warning: ':warning: ##TYPE## ```##DATA##```'
        info: ':information_source: ##TYPE## ```##DATA##```'

  ###############################################################################
  # Exclusion Rules Configuration
  # Configurable exclusion rules to omit specific analyses from being indexed based on metadata tags assigned by Song
  ###############################################################################
  exclusionRules:
    byId:
      # studyId:
      #   - "test123"
#      analysis:
#        - "analysisId"
#      file:
#        - 41ba4fb3-9428-50b5-af6c-d779cd59b04d
#      sample:
#        - "sampleId"
#      specimen:
#        - "specimenId"
#      donor:
#        - DO232991

###############################################################################
# Logging & Monitoring Configuration
###############################################################################
logging:
  level:
    root: INFO
    bio.overture: TRACE
    # Very verbose class, only enable lower level when necessary
    bio.overture.maestro.domain.entities.indexing.rules.IDExclusionRule: INFO
    org.apache.kafka.clients: INFO

###############################################################################
# Spring Boot Actuator Endpoints Configuration
###############################################################################
management:
  health:
    elasticsearch:
      enabled: false
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show_details: ALWAYS

###############################################################################
# Spring Configuration (Kafka)
# Including Kafka integration with song 
###############################################################################
spring:
  config:
    useLegacyProcessing: true
  application:
    name: maestro
  output.ansi.enabled: ALWAYS
  cloud:
    stream:
      kafka: # remove this key to disable kafka
        binder:
          brokers: http://localhost:9092
        bindings:
          songInput:
            consumer:
              enableDlq: true
              dlqName: maestro_song_analysis_dlq
              autoCommitOnError: true
              autoCommitOffset: true
          input:
            consumer:
              enableDlq: true
              dlqName: maestro_index_requests_dlq
              autoCommitOnError: true
              autoCommitOffset: true
      bindings:
        input:
          # We don't specify content type because @StreamListener will handle that
          destination: maestro_index_requests
          group: requestsConsumerGrp
          consumer:
            maxAttempts: 1
        songInput:
          destination: song-analysis
          group: songConsumerGrp
          consumer:
            maxAttempts: 1

###############################################################################
# Springdoc Configuration
  # This configuration supports reverse proxy URL rewrites (e.g., http://xyz.com/maestro)
  # It addresses the following issues:
  # 1. Ensures correct Swagger URL generation when behind a reverse proxy
  # 2. Avoids conflicts with Kafka configuration when enabling forward headers
  # 3. Prevents unwanted auto-configuration of the Kafka client
  # Note: This approach is used instead of enabling forward headers in Spring,
  # which would have resolved the Swagger UI URL issue but caused other conflicts.
###############################################################################
springdoc:
  serverOverride:
    enabled: false
    value: http://localhost:11235/custom
  swagger-ui:
    path: /api-docs
    